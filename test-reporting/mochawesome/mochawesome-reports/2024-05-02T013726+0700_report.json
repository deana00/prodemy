{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-01T18:37:21.566Z",
    "end": "2024-05-01T18:37:26.983Z",
    "duration": 5417,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d1c77eaa-eccc-488d-b713-9889880b642d",
      "title": "",
      "fullFile": "D:\\Prodemy Gen#21 - Automation Software Engineer\\prodemy\\test-reporting\\mochawesome\\specs\\posts_api.spec.js",
      "file": "\\specs\\posts_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f737266-ae86-40d4-84ab-d84884831008",
          "title": "Posts API",
          "fullFile": "D:\\Prodemy Gen#21 - Automation Software Engineer\\prodemy\\test-reporting\\mochawesome\\specs\\posts_api.spec.js",
          "file": "\\specs\\posts_api.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get a All Posts API",
              "fullTitle": "Posts API Get a All Posts API",
              "timedOut": false,
              "duration": 788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts\")\n    expect(res.body).to.be.jsonSchema(postsSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "1822033c-fb33-4d24-9148-838a6d55268b",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get a Single Post API",
              "fullTitle": "Posts API Get a Single Post API",
              "timedOut": false,
              "duration": 563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts/2\")\n    expect(res.body).to.be.jsonSchema(postSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "10d254c6-c457-47e3-8324-1f4b0f5890eb",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search Posts API",
              "fullTitle": "Posts API Search Posts API",
              "timedOut": false,
              "duration": 587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts/search?q=life\")\n    expect(res.body).to.be.jsonSchema(postsSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "a1825787-dd00-46ff-8854-d6f565a33a1b",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Limit and Skip Posts API",
              "fullTitle": "Posts API Limit and Skip Posts API",
              "timedOut": false,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts?limit=5&skip=5&select=title,reactions,userId\")\n    expect(res.body).to.be.jsonSchema(limitSkipSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "3703bb4c-de76-4b60-b38c-663bbd213df6",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get All Posts by User ID API",
              "fullTitle": "Posts API Get All Posts by User ID API",
              "timedOut": false,
              "duration": 579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts/user/7\")\n    expect(res.body).to.be.jsonSchema(postsSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "93747b2a-3da1-4e82-8052-603136969442",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Posts's Comments API",
              "fullTitle": "Posts API Get Posts's Comments API",
              "timedOut": false,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.get(\"/posts/1/comments\")\n    expect(res.body).to.be.jsonSchema(commentsSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "0390180b-36f4-4857-946c-25ced0142634",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a new Post API",
              "fullTitle": "Posts API Add a new Post API",
              "timedOut": false,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const addPost = {\n    title: 'Good evening!',\n    userId: 10\n}\ntry {\n    const res = await req\n        .post(\"/posts/add\")\n        .send(addPost)\n    expect(res.body).to.be.jsonSchema(postSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "0cce4d09-5148-4e32-abc5-5524a1dc3bdb",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update a Post API",
              "fullTitle": "Posts API Update a Post API",
              "timedOut": false,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatePost = {\n    title: 'Good morning!'\n}\ntry {\n    const res = await req\n        .put(\"/posts/1\")\n        .send(updatePost)\n    expect(res.body).to.be.jsonSchema(postSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "66c80f65-711c-477c-86bf-7d43f313c621",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete a Post API",
              "fullTitle": "Posts API Delete a Post API",
              "timedOut": false,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await req.delete(\"/posts/1\")\n    expect(res.body).to.be.jsonSchema(deletePostSchema)\n} catch (error) {\n    console.log(\"Error API request\", error)\n}",
              "err": {},
              "uuid": "3a50e7ba-4381-42f3-bdb2-f1c8943dda9f",
              "parentUUID": "4f737266-ae86-40d4-84ab-d84884831008",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1822033c-fb33-4d24-9148-838a6d55268b",
            "10d254c6-c457-47e3-8324-1f4b0f5890eb",
            "a1825787-dd00-46ff-8854-d6f565a33a1b",
            "3703bb4c-de76-4b60-b38c-663bbd213df6",
            "93747b2a-3da1-4e82-8052-603136969442",
            "0390180b-36f4-4857-946c-25ced0142634",
            "0cce4d09-5148-4e32-abc5-5524a1dc3bdb",
            "66c80f65-711c-477c-86bf-7d43f313c621",
            "3a50e7ba-4381-42f3-bdb2-f1c8943dda9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-reports",
        "reportFilename": "[datetime]_report"
      },
      "version": "6.2.0"
    }
  }
}